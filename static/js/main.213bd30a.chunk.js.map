{"version":3,"sources":["Component/Square.js","Component/NewGame.js","Component/Undo.js","Component/InforWin.js","Component/Mode.js","Component/Board.js","Component/Game.js","serviceWorker.js","index.js"],"names":["Square","setStyle","Background","BackgroundColor","backgroundColor","backgroundImage","this","props","value","onClick","lineWin","type","className","style","React","Component","NewGame","state","newgame","Undo","undo","InforWin","src","alt","PureComponent","Mode","changeMode","mode","refs","check","checked","ref","onChange","Board","handleClick","i","j","win","squares","history","turn","valueO","valueY","setState","isEndGame","renderSquare","key","renderRowSquare","row","size","push","renderBoard","board","isEndGameHorizontal","countLeft","countRight","modeTwohead","squareClick","index","head","isEndGameVertical","countTop","countBotton","isEndGameCheoChinh","isEndGameCheoPhu","pop","map","his","setMode","inforWin","Game","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.213bd30a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Square extends React.Component {\r\n  setStyle = (Background, BackgroundColor) => {\r\n    return {\r\n      backgroundColor: `${BackgroundColor}`,\r\n      backgroundImage: `url(${Background})`\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { value, onClick, lineWin } = this.props;\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"square\"\r\n          onClick={onClick}\r\n          style={this.setStyle(value, lineWin)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\n\r\nclass NewGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { newgame } = this.props;\r\n    return (\r\n      <div className=\"col-3 col-sm-3\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary fa fa-play\"\r\n          onClick={newgame}\r\n        >\r\n          Ván mới\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewGame;\r\n","import React from \"react\";\r\n\r\nclass Undo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  undo = () => {\r\n    const { undo } = this.props;\r\n    undo();\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"col-3 col-sm-3\">\r\n        <button type=\"button\" className=\" btn btn-primary fa fa-undo\" onClick={this.undo}>\r\n          Undo\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Undo;\r\n","import React from \"react\";\r\n\r\nclass InforWin extends React.PureComponent  {\r\n  render() {\r\n    const {src}=this.props\r\n    return (\r\n      <div className=\" row col-6\">\r\n        <img src={src} alt=\"Tuaan\" className=\" imgwin\" />\r\n        <img src=\"./image/win.png\" alt=\"Tuaan\" className=\" imgwin\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InforWin;\r\n","import React from \"react\";\r\n\r\nclass Mode extends React.Component {\r\n  changeMode = () => {\r\n    const { mode } = this.props;\r\n    const { check } =this.refs;\r\n\r\n    return mode(check.checked);\r\n  };\r\n\r\n  render() {\r\n    const check = \"check\";\r\n    return (\r\n      <div className=\"col-3 col-sm-3\">\r\n        <input\r\n          type=\"checkbox\"\r\n          ref={check}\r\n          value=\"tuan\"\r\n          onChange={this.changeMode}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mode;\r\n","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport Square from \"./Square\";\r\nimport NewGame from \"./NewGame\";\r\nimport Undo from \"./Undo\";\r\nimport InforWin from \"./InforWin\";\r\nimport Mode from \"./Mode\";\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      turn: true,\r\n      size: 20,\r\n      value: [\"./image/X.png\", \"./image/O.png\"],\r\n      squares: [[]],\r\n      win: false,\r\n      lineWin: [[]],\r\n      modeTwohead: false,\r\n      history: []\r\n    };\r\n  }\r\n\r\n  handleClick = (i, j) => {\r\n    const { win, squares, history, turn, value } = this.state;\r\n    const valueO = value[0];\r\n    const valueY = value[1];\r\n    if (!win) {\r\n      if (squares[[i, j]] == null) {\r\n        if (turn) squares[[i, j]] = valueO;\r\n        else squares[[i, j]] = valueY;\r\n        this.setState({\r\n          squares,\r\n          turn: !turn,\r\n          history: [...history, { i, j, value: squares[[i, j]] }]\r\n        });\r\n      }\r\n\r\n      if (this.isEndGame(i, j))\r\n        this.setState({\r\n          win: !win\r\n        }); \r\n    }\r\n  };\r\n\r\n  renderSquare = (i, j) => {\r\n    const { lineWin, squares } = this.state;\r\n    return (\r\n      <Square\r\n        key={[i, j]}\r\n        lineWin={lineWin[[i, j]]}\r\n        value={squares[[i, j]]}\r\n        onClick={() => this.handleClick(i, j)}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderRowSquare = j => {\r\n    const row = [];\r\n    const { size } = this.state;\r\n    for (let i = 0; i < size; i += 1) {\r\n      row.push(this.renderSquare(i, j));\r\n    }\r\n    return <div>{row}</div>;\r\n  };\r\n\r\n  renderBoard = () => {\r\n    const board = [];\r\n    const { size } = this.state;\r\n    for (let j = 0; j < size; j += 1) {\r\n      board.push(\r\n        <div className=\"row\" key={j}>\r\n          <div className=\"col-12\">{this.renderRowSquare(j)}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"board row\">{board}</div>;\r\n  };\r\n\r\n  isEndGameHorizontal = (i, j) => {\r\n    let countLeft;\r\n    let countRight;\r\n    countLeft = 0;\r\n    countRight = 0;\r\n    const { lineWin, squares, value, size, modeTwohead } = this.state;\r\n    let mode = 0;\r\n    const squareClick = squares[[i, j]];\r\n\r\n    for (let index = i; index >= 0; index -= 1) {\r\n      if (squares[[index, j]] === squareClick) {\r\n        lineWin[[index, j]] = \"black\";\r\n        countLeft += 1;\r\n        if (index === 0) mode += 1;\r\n      } else {\r\n        if (index > 0) {\r\n          const head = squares[[index, j]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        } else mode += 1;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (countLeft === 0) countRight += 1;\r\n\r\n    for (let index = i + 1; index < size; index += 1) {\r\n      if (squares[[index, j]] === squareClick) {\r\n        countRight += 1;\r\n        lineWin[[index, j]] = \"black\";\r\n        if (index === size - 1) mode += 1;\r\n      } else {\r\n        if (index < size) {\r\n          const head = squares[[index, j]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!modeTwohead) {\r\n      if (countLeft + countRight < 5) {\r\n        this.setState({\r\n          lineWin: [[null, null]]\r\n        });\r\n      } else {\r\n        this.setState({\r\n          lineWin\r\n        });\r\n      }\r\n      return countLeft + countRight >= 5;\r\n    }\r\n    if (countLeft + countRight < 5 || mode === 2) {\r\n      this.setState({\r\n        lineWin: [[null, null]]\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lineWin\r\n      });\r\n    }\r\n    return countLeft + countRight >= 5 && mode !== 2;\r\n  };\r\n\r\n  isEndGameVertical = (i, j) => {\r\n    let countTop;\r\n    let countBotton;\r\n    countTop = 0;\r\n    countBotton = 0;\r\n    const { lineWin, squares, value, size, modeTwohead } = this.state;\r\n    let mode = 0;\r\n    const squareClick = squares[[i, j]];\r\n\r\n    for (let index = j; index >= 0; index -= 1) {\r\n      if (squares[[i, index]] === squares[[i, j]]) {\r\n        countTop += 1;\r\n        lineWin[[i, index]] = \"black\";\r\n        if (index === 0) mode += 1;\r\n      } else {\r\n        if (index > 0) {\r\n          const head = squares[[i, index]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        } else mode += 1;\r\n        break;\r\n      }\r\n    }\r\n    if (countTop === 0) countBotton += 1;\r\n    for (let index = j + 1; index <= size; index += 1) {\r\n      if (squares[[i, index]] === squares[[i, j]]) {\r\n        countBotton += 1;\r\n        lineWin[[i, index]] = \"black\";\r\n        if (index === size - 1) mode += 1;\r\n      } else {\r\n        if (index < size) {\r\n          const head = squares[[i, index]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!modeTwohead) {\r\n      if (countTop + countBotton < 5) {\r\n        this.setState({\r\n          lineWin: [[null, null]]\r\n        });\r\n      } else {\r\n        this.setState({\r\n          lineWin\r\n        });\r\n      }\r\n      return countTop + countBotton >= 5;\r\n    }\r\n    if (countTop + countBotton < 5 || mode === 2) {\r\n      this.setState({\r\n        lineWin: [[null, null]]\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lineWin\r\n      });\r\n    }\r\n    return countTop + countBotton >= 5 && mode !== 2;\r\n  };\r\n\r\n  isEndGameCheoChinh = (i, j) => {\r\n    let countTop;\r\n    let countBotton;\r\n    countTop = 0;\r\n    countBotton = 0;\r\n    const { lineWin, squares, value, size, modeTwohead } = this.state;\r\n    let mode = 0;\r\n    const squareClick = squares[[i, j]];\r\n    for (let index = 0; index <= i; index += 1) {\r\n      if (squares[[i - index, j - index]] === squares[[i, j]]) {\r\n        countTop += 1;\r\n        if (i - index === 0) mode += 1;\r\n        lineWin[[i - index, j - index]] = \"black\";\r\n      } else {\r\n        if (index > 0) {\r\n          const head = squares[[i - index, j - index]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        } else mode += 1;\r\n        break;\r\n      }\r\n    }\r\n    if (countTop === 0) countBotton += 1;\r\n    for (let index = 1; index < size; index += 1) {\r\n      if (squares[[i + index, j + index]] === squares[[i, j]]) {\r\n        countBotton += 1;\r\n        lineWin[[i + index, j + index]] = \"black\";\r\n        if (j + index === size - 1) mode += 1;\r\n      } else {\r\n        if (index < size) {\r\n          const head = squares[[i + index, j + index]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!modeTwohead) {\r\n      if (countTop + countBotton < 5) {\r\n        this.setState({\r\n          lineWin: [[null, null]]\r\n        });\r\n      } else {\r\n        this.setState({\r\n          lineWin\r\n        });\r\n      }\r\n      return countTop + countBotton >= 5;\r\n    }\r\n    if (countTop + countBotton < 5 || mode === 2) {\r\n      this.setState({\r\n        lineWin: [[null, null]]\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lineWin\r\n      });\r\n    }\r\n    return countTop + countBotton >= 5 && mode !== 2;\r\n  };\r\n\r\n  isEndGameCheoPhu = (i, j) => {\r\n    let countTop;\r\n    let countBotton;\r\n    countTop = 0;\r\n    countBotton = 0;\r\n    const { lineWin, squares, value, size, modeTwohead } = this.state;\r\n    let mode = 0;\r\n    const squareClick = squares[[i, j]];\r\n    for (let index = 0; index <= i; index += 1) {\r\n      if (squares[[i + index, j - index]] === squares[[i, j]]) {\r\n        countTop += 1;\r\n        if (i - index === 0) mode += 1;\r\n        lineWin[[i + index, j - index]] = \"black\";\r\n      } else {\r\n        if (index > 0) {\r\n          const head = squares[[i + index, j - index]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        } else mode += 1;\r\n        break;\r\n      }\r\n    }\r\n    if (countTop === 0) countBotton += 1;\r\n    for (let index = 1; index < size; index += 1) {\r\n      if (squares[[i - index, j + index]] === squares[[i, j]]) {\r\n        countBotton += 1;\r\n        lineWin[[i - index, j + index]] = \"black\";\r\n        if (j + index === size - 1) mode += 1;\r\n      } else {\r\n        if (index < size) {\r\n          const head = squares[[i - index, j + index]];\r\n          if (\r\n            (head === value[0] || head === value[1]) &&\r\n            head !== squareClick\r\n          ) {\r\n            mode += 1;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (!modeTwohead) {\r\n      if (countTop + countBotton < 5) {\r\n        this.setState({\r\n          lineWin: [[null, null]]\r\n        });\r\n      } else {\r\n        this.setState({\r\n          lineWin\r\n        });\r\n      }\r\n      return countTop + countBotton >= 5;\r\n    }\r\n    if (countTop + countBotton < 5 || mode === 2) {\r\n      this.setState({\r\n        lineWin: [[null, null]]\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lineWin\r\n      });\r\n    }\r\n\r\n    return countTop + countBotton >= 5 && mode !== 2;\r\n  };\r\n\r\n  isEndGame = (i, j) => {\r\n    return (\r\n      this.isEndGameHorizontal(i, j) ||\r\n      this.isEndGameVertical(i, j) ||\r\n      this.isEndGameCheoChinh(i, j) ||\r\n      this.isEndGameCheoPhu(i, j)\r\n    );\r\n  };\r\n\r\n  InforWin = () => {\r\n    const { turn, value } = this.state;\r\n    const src = !turn ? value[0] : value[1];\r\n    return <InforWin src={src} />;\r\n  };\r\n\r\n  newgame = () => {\r\n    this.setState({\r\n      squares: [[]],\r\n      turn: true,\r\n      win: false,\r\n      lineWin: [[]],\r\n      history: []\r\n    });\r\n  \r\n  };\r\n\r\n  undo = () => {\r\n    const { history, win, turn } = this.state;\r\n    if (!win && history) {\r\n      history.pop();\r\n      const undo = [[]];\r\n      history.map(his => {\r\n        undo[[his.i, his.j]] = his.value;\r\n        return null;\r\n      });\r\n      this.setState({\r\n        squares: undo,\r\n        turn: !turn,\r\n        history\r\n      });\r\n    }\r\n  };\r\n\r\n  setMode = modeTwohead => {\r\n    this.setState({\r\n      modeTwohead\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { win } = this.state;\r\n    let { turn } = this.state;\r\n    turn = turn ? \"X\" : \"O\";\r\n    const inforWin = win ? this.InforWin() : \"\";\r\n    return (\r\n      <div>\r\n        <div className=\"row menu\">\r\n          <div className=\"col-6 row \">\r\n            <NewGame newgame={this.newgame} />\r\n            <Undo undo={this.undo} />\r\n            Chặn hai đầu:\r\n            <Mode mode={this.setMode} />\r\n            <div className=\"col-3 col-sm-3\"> Đến lượt:{turn}</div>\r\n          </div>\r\n          {inforWin}\r\n        </div>\r\n        <br />\r\n        {this.renderBoard()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\n\r\nexport class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-10\">\r\n        <Board />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"../src/Component/Game\";\nimport * as serviceWorker from \"../src/serviceWorker\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}